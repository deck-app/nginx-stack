name: Nginx Stack

on:
  schedule:
  - cron:  '30 5,17 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Nginx-PHP8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx php 8.0
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: "8.0"
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app
    - name: PHP version check
      run : docker exec nginx-stack_nginx_1 php -v
    - name: Mongodb driver check
      run:  docker exec nginx-stack_nginx_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec nginx-stack_nginx_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec nginx-stack_nginx_1 composer
    - name: Web site Test
      run: |
        docker exec nginx-stack_nginx_1 wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
        sudo curl -I --http2 http://localhost:5647/
    - name: Laravel8 test
      run:  docker exec nginx-stack_nginx_1 composer create-project --prefer-dist laravel/laravel:^8.0
    - name: Destroy Container and file
      run:  |
        docker-compose down
        sudo rm -rf /tmp/app

  Nginx-PHP8-ARM64:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # make arm64 deps and x86_64 deps
        include:
          - { name: "MacOS 11.0 arm64 deps", os: fedora_latest, macarch: arm64 }
          - { name: "MacOS 10.9 x86_64 deps", os: ubuntu-latest , macarch: x86_64 }
    # strategy:
    #   matrix:
    #     include:
    #       - os: linux
    #         arch: amd64
    # runs-on: lxd-arm64
    # name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    # strategy:
    #   matrix:
    #     include:
    #       - arch: aarch64
    #         distro: ubuntu18.04
    #       - arch: ppc64le
    #         distro: alpine_latest
    #       - arch: s390x
    #         distro: fedora_latest
    steps:
    - uses: actions/checkout@v2
    # - name: Build the Docker image nginx php 8.0
    #   run:  |
    #     docker run -t ghcr.io/deck-app/nginx:v8.0@sha256:441acf0005b780d7cb01d7f421eaf4e6324e1c9492f0ebe2d360bb052d2c8510 bash
    #     uname -a
    #     umane -m
    - name: Build the Docker image nginx php 8.0
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: "8.0"
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app
    - name: PHP version check
      run : docker exec nginx-stack_nginx_1 php -v
    - name: ARC version check
      run : docker exec nginx-stack_nginx_1 uname -a
    - name: ARC version check
      run : docker exec nginx-stack_nginx_1 uname -m
    # - name: Mongodb driver check
    #   run:  docker exec nginx-stack_nginx_1 php -m | grep mongo
    # - name: Mysql Driver check
    #   run: docker exec nginx-stack_nginx_1 php -m | grep mysqli
    # - name: Composer test
    #   run: docker exec nginx-stack_nginx_1 composer
    # - name: Web site Test
    #   run: |
    #     docker exec nginx-stack_nginx_1 wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
    #     sudo curl -I --http2 http://localhost:5647/
    # - name: Laravel8 test
    #   run:  docker exec nginx-stack_nginx_1 composer create-project --prefer-dist laravel/laravel:^8.0
    # - name: Destroy Container and file
    #   run:  |
    #     docker-compose down
    #     sudo rm -rf /tmp/app

  Nginx-PHP7:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx php 7.4
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: "7.4"
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app
    - name: PHP version check
      run : docker exec nginx-stack_nginx_1 php -v
    - name: Mongodb driver check
      run:  docker exec nginx-stack_nginx_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec nginx-stack_nginx_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec nginx-stack_nginx_1 composer
    - name: Web site Test
      run: |
        docker exec nginx-stack_nginx_1 wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
        sudo curl -I --http2 http://localhost:5647/
    - name: Laravel8 test
      run:  docker exec nginx-stack_nginx_1 composer create-project --prefer-dist laravel/laravel:^8.0
    - name: Destroy Container and file
      run:  |
        docker-compose down
        sudo rm -rf /tmp/app
  
  Nginx-PHP5: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx php 5.6
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: "5.6"
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app
    - name: PHP version check
      run : docker exec nginx-stack_nginx_1 php -v
    - name: Mysql Driver check
      run: docker exec nginx-stack_nginx_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec nginx-stack_nginx_1 composer
    - name: Web site Test
      run: |
        docker exec nginx-stack_nginx_1 wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
        sudo curl -I --http2 http://localhost:5647/
    - name: Destroy Container and file
      run:  |
        docker-compose down
        sudo rm -rf /tmp/app
  
  
